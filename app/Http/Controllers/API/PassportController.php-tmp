<?php

namespace App\Http\Controllers\API;

use App\Http\Controllers\Controller;
use App\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Socialite;
use Validator;

class PassportController extends Controller {

	public $successStatus = 200;

	/**
	 * login api
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function login() {
		if (Auth::attempt(['email' => request('email'), 'password' => request('password')])) {
			$user             = Auth::user();
			$success['token'] = $user->createToken('MyApp')->accessToken;
			flash('You are logged in!', 'success');
			return redirect('home');
		} else {
			return response()->json(['error' => 'Unauthorised'], 401);
		}
	}

	/**
	 * Register api
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function register(Request $request) {
		$validator = Validator::make($request->all(), [
				'name'       => 'required',
				'email'      => 'required|email',
				'password'   => 'required',
				'c_password' => 'required|same:password',
			]);

		if ($validator    ->fails()) {
			return response()->json(['error' => $validator->errors()], 401);
		}

		$input             = $request->all();
		$input['password'] = bcrypt($input['password']);
		$user              = User::create($input);
		$success['token']  = $user->createToken('MyApp')->accessToken;
		$success['name']   = $user->name;

		return response()->json(['success' => $success], $this->successStatus);
	}

	/**
	 * details api
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function getDetails() {
		$user = Auth::user();
		return response()->json(['success' => $user], $this->successStatus);
	}
	public function redirectToProvider() {
		return Socialite::driver('github')->redirect();
	}
	public function handleProviderCallback() {
		$user = Socialite::driver('github')->user();

		return redirect('home')->with($user);
		$token        = $user->token;
		$refreshToken = $user->refreshToken;// not always provided
		$expiresIn    = $user->expiresIn;

		// OAuth One Providers
		$token       = $user->token;
		$tokenSecret = $user->tokenSecret;

		// All Providers
		$user->getId();
		$user->getNickname();
		$user->getName();
		$user->getEmail();
		$user->getAvatar();
	}
}
